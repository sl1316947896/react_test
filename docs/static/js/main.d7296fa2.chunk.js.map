{"version":3,"sources":["components/RollDemo.js","home/home.js","App.js","serviceWorker.js","index.js"],"names":["RollDemo","props","componentDidMount","industryNews","setInterval","taskIndustryNews","refs","newDiv","scrollTop","newDivUI","offsetHeight","clientHeight","handleIndustryNewsEnter","clearInterval","handleIndustryNewsLeave","componentWillUnmount","data","this","className","style","overflow","float","href","color","ref","onMouseEnter","bind","onMouseLeave","length","map","item","index","key","job","city","time","React","Component","EditableFormTable","Form","create","Home","src","height","margin","fontSize","width","opacity","position","background","placeholder","marginBottom","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7296fa2.chunk.js","sourcesContent":["\n/*eslint-disable*/\nimport { Form } from 'antd';\nimport React from 'react';\nimport './RollDemo.css';\n\n\nclass RollDemo extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n    \n    componentDidMount = () => {\n        //文字无缝滚动\n        this.industryNews = setInterval(this.taskIndustryNews, 50);\n    }\n    taskIndustryNews = () => {\n        if (this.refs.newDiv.scrollTop >= this.refs.newDivUI.offsetHeight - this.refs.newDiv.clientHeight) {\n            this.refs.newDiv.scrollTop = 0;\n        }\n        else {\n            this.refs.newDiv.scrollTop += 1;\n        }\n    }\n\n\n    handleIndustryNewsEnter = () => {\n        clearInterval(this.industryNews);\n    }\n    handleIndustryNewsLeave = () => {\n        this.industryNews = setInterval(this.taskIndustryNews, 50);\n    }\n    componentWillUnmount = () => {\n        clearInterval(this.industryNews);\n    }\n\n\n    render() {\n        const {data} = this.props;\n        return (\n            <div className='ceShiTable'>\n                <div className='ceShiTable-title' style={{overflow: 'hidden'}}>\n                    <span className='ceShiTable-text2' style={{float:'left'}}>最新职位</span>\n                    <span className='ceShiTable-text2' style={{float: 'right'}}><a href=\"#\" style={{color:'#ccc'}}>更多</a></span>\n                </div>\n                <div\n                    ref='newDiv'\n                    className='ceShiTable-body'\n                    onMouseEnter={this.handleIndustryNewsEnter.bind(this)}\n                    onMouseLeave={this.handleIndustryNewsLeave.bind(this)}\n                >\n                    <ul ref='newDivUI'>\n                        {data && data.length > 0\n                            ?\n                            data.map((item,index) => {\n                                return (\n                                    <li key={index}>\n                                            <span><a href=\"#\" style={{color:'#3c99d8'}}>{item.job}</a></span>\n                                            <span>{item.city}</span>\n                                            <span>{item.time}</span>\n                                    </li>\n                                )\n                            })\n                            : <span className='noData'>暂无数据</span>\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n\n}\nconst EditableFormTable = Form.create()(RollDemo);\nexport default EditableFormTable;","import React from 'react';\nimport './home.css';\nimport RollDemo from '../components/RollDemo';\n\nclass Home extends React.Component {\n  render() {\n    const data =['ajax', 'IOS', '数据', '安全', '搜索', '算法', '运营', '视觉', '交互', '前端']\n    const list = [\n      {\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      },{\n        job: '职位',\n        city: '城市',\n        time: '1分钟'\n      }\n    ]\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"header-main\">\n          <div className=\"header-left\">\n            <a src='' className=\"header-logo\">\n              <img style={{height:20}} src=\"https://img.alicdn.com/tfs/TB1Zv8_lxSYBuNjSspjXXX73VXa-390-63.png\" />\n            </a>\n            <span className=\"header-row\">|</span>\n            <span>社招官网</span>\n            <ul className=\"header-list\">\n              <li><a href=\"#\" style={{color: '#F37327'}}>首页</a></li>\n              <li><a href=\"#\">社会招聘</a></li>\n              <li><a href=\"#\">校园招聘</a></li>\n              <li><a href=\"#\">了解阿里</a></li>\n              <li><a href=\"#\">个人中心</a></li>\n            </ul>\n          </div>\n          <div className=\"header-right\">\n            <span>\n              欢迎来到阿里巴巴招聘网！\n            </span>\n            <a href=\"#\">注册</a>\n            <span style={{margin:'0 4px'}}>|</span>\n            <a href=\"#\">登陆</a>\n          </div>\n        </div>\n      </header>\n      <div className=\"App-banner\">\n        <div className=\"banner-box\">\n          <p>If not now, when?</p>\n          <p>If not me, who?</p>\n          <p style={{fontSize:38}}>此时此刻，非我莫属！</p>\n          <div className=\"box-search\">\n            <div style={{width: '100%', height:'100%', opacity:0.1, position:'absolute',background:'#fff'}}></div>\n            <input placeholder=\"请输入职位关键词\" className=\"box-search-input\" />\n            <button className=\"search-but\">搜索</button>\n          </div>\n          <div className=\"box-search-item\">\n            <span>热词搜索:</span>\n            <ul>\n              {\n                data.map((item, index) => {\n                  return (\n                    <li key={index}><a href=\"#\">{item}</a></li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n      <footer>\n        <div className=\"App-footer\">\n          <div className=\"footer-left\">\n            <RollDemo data={list} />\n          </div>\n          <div className=\"footer-right\">\n            <div className=\"right-top right-te\" style={{marginBottom:20}}>\n              <a href=\"#\">\n                <img src=\"https://img.alicdn.com/tfs/TB1SbxarYj1gK0jSZFOXXc7GpXa-2546-848.png\" />>\n              </a>\n            </div>\n            <div className=\"right-bottom right-te\">\n              <a>\n                <img src=\"https://img.alicdn.com/tfs/TB18tFCCH2pK1RjSZFsXXaNlXXa-240-34.svg\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from './home/home'\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}